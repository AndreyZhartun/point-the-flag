{"version":3,"sources":["redux/ActionCreators.js","redux/ActionTypes.js","components/GuessGame.js","components/GuessMap.js","components/Header.js","redux/reducer.js","components/App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["changeGameStatus","status","type","payload","handleError","errorMessage","changePreviousCountryCorrect","country","changePreviousCountryGiven","countCorrectAnswer","changeRequestStatus","sent","addFlagToShownFlags","index","changeCurrentFlagIndex","GuessGame","dispatch","useDispatch","useSelector","state","game","requestSent","previousCountryCorrect","prevCountryGiven","previousCountryGiven","marker","useEffect","console","log","isInProgress","randomFirstIndex","Math","floor","random","FLAGS","length","className","src","currentFlagIndex","path","alt","shownFlags","correctAnswers","icon","faFlag","faCheck","faMapMarkerAlt","lat","toFixed","lng","color","disabled","onClick","getState","setTimeout","currentIndex","query","fetch","then","response","ok","json","error","Error","statusText","message","data","undefined","address","country_code","localeCompare","code","possibleNewIndexes","Array","keys","filter","includes","newIndex","catch","hidden","faArrowLeft","GuessMap","map","refmarker","useRef","refmap","current","leafletElement","invalidateSize","Map","center","zoom","ref","TileLayer","attribution","url","Marker","draggable","onDragend","newPosition","getLatLng","position","Header","faQuestion","href","faCode","faAddressCard","initialState","Reducer","action","concat","store","createStore","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26ce582e.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nimport { FLAGS } from '../shared/flags.json';\r\n\r\nexport const changeMarkerPosition = (lat, lng) => ({\r\n    type: ActionTypes.CHANGE_MARKER_POSITION,\r\n    payload: {\r\n        lat: lat,\r\n        lng: lng,\r\n    }\r\n});\r\n\r\nexport const setRandomFirstIndex = () => (dispatch) => {\r\n    //определить первый случайный индекс флага\r\n    const randomFirstIndex = Math.floor(Math.random() * FLAGS.length);\r\n\r\n    dispatch(changeCurrentFlagIndex(randomFirstIndex));\r\n    //записать, что игра в прогрессе\r\n    dispatch(changeGameStatus(true));\r\n}\r\n\r\nexport const changeGameStatus = (status) => ({\r\n    type: ActionTypes.CHANGE_GAME_STATUS,\r\n    payload: {\r\n        status: status\r\n    }\r\n});\r\n\r\nexport const fetchAddress = () => (dispatch, getState) => {\r\n    //задержка в 1000 мс, используемый API не рекомендует посылать запросы чаще чем через 1 сек.\r\n    dispatch(changeRequestStatus(true));\r\n    setTimeout(() => {\r\n        dispatch(changeRequestStatus(false))\r\n    },\r\n        1000\r\n    );\r\n    const currentIndex = getState().game.currentFlagIndex;\r\n    const query = 'https://nominatim.openstreetmap.org/reverse?format=jsonv2&'\r\n        + 'lat=' + getState().marker.lat\r\n        + '&lon=' + getState().marker.lng\r\n        + '&accept-language=en';\r\n\r\n    //запрос reverse к Nominatim API\r\n    return fetch(query)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            else {\r\n                var error = new Error('Ошибка ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw new Error(error.message);\r\n            })\r\n        .then((data) => {\r\n            //записать правильный ответ для показа\r\n            dispatch(changePreviousCountryCorrect(FLAGS[currentIndex].country));\r\n            if (data.address !== undefined) {\r\n                dispatch(changePreviousCountryGiven(data.address.country));\r\n            } else {\r\n                dispatch(changePreviousCountryGiven('N/A'));\r\n            }\r\n            //если коды стран совпали, то ответ верный\r\n            if (data.address.country_code\r\n                .localeCompare(FLAGS[currentIndex].code) === 0) {\r\n                dispatch(countCorrectAnswer());\r\n            }\r\n\r\n            //добавить текущий флаг в просмотренные\r\n            dispatch(addFlagToShownFlags(currentIndex));\r\n\r\n            //вычесть из всех флагов уже просмотренные, чтобы получить массив из непоказанных флагов\r\n            const possibleNewIndexes = [...Array(FLAGS.length).keys()]\r\n                .filter(index => !getState().game.shownFlags.includes(index));\r\n\r\n            //если непоказанных флагов нет, то конец игры\r\n            if (possibleNewIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            //выбрать случайный индекс из не показанных раньше\r\n            const newIndex = possibleNewIndexes[Math.floor(Math.random() * possibleNewIndexes.length)]\r\n\r\n            dispatch(changeCurrentFlagIndex(newIndex));\r\n        })\r\n        .catch(error => dispatch(handleError(error.message)));\r\n}\r\n\r\nexport const handleError = (errorMessage) => ({\r\n    type: ActionTypes.HANDLE_ERROR,\r\n    payload: {\r\n        errorMessage: errorMessage\r\n    }\r\n});\r\n\r\nexport const changePreviousCountryCorrect = (country) => ({\r\n    type: ActionTypes.CHANGE_PREVIOUS_COUNTRY_CORRECT,\r\n    payload: {\r\n        country: country\r\n    }\r\n});\r\n\r\nexport const changePreviousCountryGiven = (country) => ({\r\n    type: ActionTypes.CHANGE_PREVIOUS_COUNTRY_GIVEN,\r\n    payload: {\r\n        country: country\r\n    }\r\n});\r\n\r\nexport const countCorrectAnswer = () => ({\r\n    type: ActionTypes.COUNT_CORRECT_ANSWER\r\n});\r\n\r\nexport const changeRequestStatus = (sent) => ({\r\n    type: ActionTypes.CHANGE_REQUEST_STATUS,\r\n    payload: {\r\n        status: sent\r\n    }\r\n})\r\n\r\nexport const addFlagToShownFlags = (index) => ({\r\n    type: ActionTypes.ADD_FLAG_TO_SHOWN_FLAGS,\r\n    payload: {\r\n        index: index\r\n    }\r\n});\r\n\r\nexport const changeCurrentFlagIndex = (index) => ({\r\n    type: ActionTypes.CHANGE_CURRENT_FLAG_INDEX,\r\n    payload: {\r\n        index: index\r\n    }\r\n});\r\n","export const CHANGE_MARKER_POSITION = 'CHANGE_MARKER_POSITION';\r\nexport const CHANGE_CURRENT_FLAG_INDEX = 'CHANGE_CURRENT_FLAG_INDEX';\r\nexport const ADD_FLAG_TO_SHOWN_FLAGS = 'ADD_FLAG_TO_SHOWN_FLAGS';\r\nexport const COUNT_CORRECT_ANSWER = 'COUNT_CORRECT_ANSWER';\r\nexport const CHANGE_REQUEST_STATUS = 'CHANGE_REQUEST_STATUS';\r\nexport const CHANGE_PREVIOUS_COUNTRY_CORRECT = 'CHANGE_PREVIOUS_COUNTRY_CORRECT';\r\nexport const CHANGE_PREVIOUS_COUNTRY_GIVEN = 'CHANGE_PREVIOUS_COUNTRY_GIVEN';\r\nexport const CHANGE_GAME_STATUS = 'CHANGE_GAME_STATUS';\r\n\r\nexport const HANDLE_ERROR = 'HANDLE_ERROR';","import React, { useEffect } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faFlag, faCheck, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport \"../styles/GuessGame.css\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAddress, setRandomFirstIndex } from '../redux/ActionCreators';\r\n\r\nimport { FLAGS } from '../shared/flags.json';\r\n\r\nconst GuessGame = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    game,\r\n    requestSent,\r\n    previousCountryCorrect,\r\n    prevCountryGiven,\r\n    marker\r\n  } = useSelector((state) => ({\r\n    game: state.game,\r\n    requestSent: state.requestSent,\r\n    previousCountryCorrect: state.previousCountryCorrect,\r\n    prevCountryGiven: state.previousCountryGiven,\r\n    marker: state.marker\r\n  }));\r\n\r\n  //componentDidMount\r\n  useEffect(() => {\r\n    //случайно определить первый флаг\r\n    console.log('xd');\r\n    if (!game.isInProgress) {\r\n      dispatch(setRandomFirstIndex());\r\n    }\r\n  }, [dispatch, game.isInProgress])\r\n\r\n  //обработка клика на кнопку\r\n  const handleConfirm = () => {\r\n    dispatch(fetchAddress());\r\n  }\r\n\r\n  //TODO иконки над ответами не выравнены при различии в занимаемых строках\r\n  //localhost ...src={require(`../../public/${lags[game.currentFlagIndex].path}`)}\r\n  return (\r\n    <div className=\"game-card\">\r\n      <div className=\"media\">\r\n        <img className=\"media__image\" src={FLAGS[game.currentFlagIndex].path} alt=\"[Текущий флаг]\" />\r\n        <div className=\"media__text hide-on-mobile\">\r\n          <p>\r\n            Флаг #{game.shownFlags.length + 1}\r\n          </p>\r\n          <p>\r\n            Правильных ответов: {game.correctAnswers}\r\n          </p>\r\n        </div>\r\n        <p className=\"media__text hide-on-desktop\">\r\n          <FontAwesomeIcon icon={faFlag} /> #{game.shownFlags.length + 1}\r\n          &nbsp;|&nbsp;\r\n          <FontAwesomeIcon icon={faCheck} /> {game.correctAnswers}\r\n        </p>\r\n      </div>\r\n      <p className=\"hide-on-mobile\">Потяните <FontAwesomeIcon icon={faMapMarkerAlt} /> маркер на карте, чтобы указать страну</p>\r\n      <hr className=\"game-card__divider\" />\r\n      <p>\r\n        <span className=\"hide-on-mobile\">Текущие координаты</span>&nbsp;<FontAwesomeIcon icon={faMapMarkerAlt} />:&nbsp;\r\n        {marker ?\r\n          `${marker.lat.toFixed(2)}, ${marker.lng.toFixed(2)}` :\r\n          \"Маркер не найден\"}\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        color=\"primary\"\r\n        disabled={requestSent || !game.isInProgress}\r\n        onClick={handleConfirm}>\r\n        <span className=\"hide-on-mobile\">Подтвердить выбранные координаты</span>\r\n        <span className=\"hide-on-desktop\">\r\n          <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n          &nbsp;\r\n          <FontAwesomeIcon icon={faCheck} />\r\n        </span>\r\n      </button>\r\n      <div hidden={!previousCountryCorrect}>\r\n        <p className=\"hide-on-mobile\">Предыдущий флаг:</p>\r\n        <span className=\"hide-on-desktop\">\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          <FontAwesomeIcon icon={faFlag} />\r\n        </span>\r\n        <div className=\"media\">\r\n          <img src={game.shownFlags.length > 0 ?\r\n            FLAGS[game.shownFlags[game.shownFlags.length - 1]].path\r\n            : undefined}\r\n            className=\"media__image media__image_size_s\" alt=\"[Предыдущий флаг]\" />\r\n          <span className=\"media__text media__text_size_s\">\r\n            <FontAwesomeIcon icon={faCheck} />\r\n            <br />\r\n            {previousCountryCorrect}\r\n          </span>\r\n          <span className=\"media__text media__text_size_s\">\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n            <br />\r\n            {prevCountryGiven}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuessGame;","import React, { useRef, useEffect } from 'react';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\n\r\nimport GuessGame from './GuessGame';\r\nimport '../styles/GuessMap.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeMarkerPosition } from '../redux/ActionCreators';\r\n\r\nconst GuessMap = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  //const refmarker = useRef(null)\r\n\r\n  const {\r\n    map,\r\n    marker,\r\n    requestSent\r\n  } = useSelector((state) => ({\r\n    map: state.map,\r\n    marker: state.marker,\r\n    requestSent: state.requestSent\r\n  }));\r\n\r\n  const refmarker = useRef(null);\r\n  const refmap = useRef(null);\r\n\r\n  //обновить координаты маркера в store, используемые при запросе к API\r\n  const updatePosition = () => {\r\n    const marker = refmarker.current;\r\n    if (marker != null) {\r\n      const newPosition = marker.leafletElement.getLatLng();\r\n      dispatch(changeMarkerPosition(newPosition.lat, newPosition.lng));\r\n    }\r\n  }\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    //фикс странного бага непрогрузки карты, видимо вызываемого конфликтом leaflet и create-react-app\r\n    if (refmap.current) {\r\n      refmap.current.leafletElement.invalidateSize();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section>\r\n      <Map center={map.center} zoom={map.zoom} ref={refmap}>\r\n        <TileLayer\r\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker\r\n          draggable={!requestSent}\r\n          onDragend={updatePosition}\r\n          position={marker}\r\n          ref={refmarker}>\r\n        </Marker>\r\n      </Map>\r\n      <GuessGame />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default GuessMap;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFlag, faQuestion, faAddressCard, faCode, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <nav className=\"nav\">\r\n        <div className=\"hide-on-desktop\">\r\n          <span className=\"nav__item\">\r\n            Потяните&nbsp;\r\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n              &nbsp;, чтобы указать страну\r\n            </span>\r\n        </div>\r\n        <ul>\r\n          <div className=\"hide-on-mobile\">\r\n            <li className=\"nav__item\">\r\n              <span className=\"nav__title\">\r\n                <FontAwesomeIcon icon={faFlag} />\r\n                <FontAwesomeIcon icon={faQuestion} />\r\n                  &nbsp;\r\n                  Укажите страну по ее флагу\r\n                </span>\r\n            </li>\r\n          </div>\r\n          <li className=\"nav__item\">\r\n            <a href=\"https://github.com/AndreyZhartun/point-the-flag\" className=\"nav__link\">\r\n              <FontAwesomeIcon icon={faCode} />\r\n                &nbsp;\r\n                <span className=\"hide-on-mobile\">Github</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"nav__item\">\r\n            <a href=\"/\" className=\"nav__link\">\r\n              <FontAwesomeIcon icon={faAddressCard} />\r\n                &nbsp;\r\n                <span className=\"hide-on-mobile\">Про меня</span>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <div className=\"hide-on-mobile\">\r\n          <div className=\"nav__item\">\r\n            <a className=\"nav__link\" href=\"https://reactjs.org/\">React</a>,&nbsp;\r\n              <a className=\"nav__link\" href=\"https://leafletjs.com/\">leaflet.js</a>,&nbsp;\r\n              <a className=\"nav__link\" href=\"https://nominatim.org/release-docs/develop/api/Reverse/\">Nominatim API</a>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const initialState = {\r\n    game: {\r\n        currentFlagIndex: 0,\r\n        shownFlags: [],\r\n        correctAnswers: 0,\r\n        isInProgress: false\r\n    },\r\n    map: {\r\n        center: {\r\n            lat: 40,\r\n            lng: 12,\r\n        },\r\n        zoom: 3\r\n    },\r\n    marker: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n    },\r\n    requestSent: false,\r\n    errorMessage: \"\",\r\n    previousCountryCorrect: \"\",\r\n    previousCountryGiven: \"\"\r\n};\r\n\r\nexport const Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        //записать новую позицию маркера\r\n        case ActionTypes.CHANGE_MARKER_POSITION:\r\n            return {\r\n                ...state,\r\n                marker: {\r\n                    ...(state.marker),\r\n                    lat: action.payload.lat,\r\n                    lng: action.payload.lng\r\n                }\r\n            };\r\n        //запомнить, что текущий флаг показан\r\n        case ActionTypes.ADD_FLAG_TO_SHOWN_FLAGS:\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    shownFlags: state.game.shownFlags.concat(action.payload.index)\r\n                }\r\n            };\r\n        //изменить показываемый флаг\r\n        case ActionTypes.CHANGE_CURRENT_FLAG_INDEX:\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    currentFlagIndex: action.payload.index\r\n                }\r\n            };\r\n        //засчитать правильный ответ\r\n        case ActionTypes.COUNT_CORRECT_ANSWER:\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    correctAnswers: state.game.correctAnswers + 1\r\n                }\r\n            };\r\n        //изменить статус игры (bool вПрогрессе: да/нет)\r\n        case ActionTypes.CHANGE_GAME_STATUS:\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    isInProgress: action.payload.status\r\n                }\r\n            }\r\n        //показать правильный ответ на предыдущий вопрос\r\n        case ActionTypes.CHANGE_PREVIOUS_COUNTRY_CORRECT:\r\n            return {\r\n                ...state,\r\n                previousCountryCorrect: action.payload.country\r\n            }\r\n        //показать данный игроком ответ на предыдущий вопрос\r\n        case ActionTypes.CHANGE_PREVIOUS_COUNTRY_GIVEN:\r\n            return {\r\n                ...state,\r\n                previousCountryGiven: action.payload.country\r\n            }\r\n        //изменить статус запроса\r\n        case ActionTypes.CHANGE_REQUEST_STATUS:\r\n            return {\r\n                ...state,\r\n                requestSent: action.payload.status\r\n            }\r\n        //записать новое сообщение ошибки\r\n        case ActionTypes.HANDLE_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload.errorMessage\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\n\nimport GuessMap from './GuessMap';\nimport Header from './Header';\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from '../redux/configureStore';\n\nconst store = ConfigureStore();\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <GuessMap />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { Reducer, initialState } from './reducer';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        Reducer,\r\n        initialState,\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}