{"version":3,"sources":["redux/ActionCreators.js","redux/ActionTypes.js","components/GuessGame.js","components/GuessMap.js","components/Header.js","redux/reducer.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["changeGameStatus","status","type","payload","handleError","errorMessage","changePrevCountryMessage","country","countCorrectAnswer","changeRequestStatus","sent","addFlagToShownFlags","index","changeCurrentFlagIndex","GuessGame","props","handleConfirmation","fetchAddress","game","isInProgress","setRandomFirstIndex","className","src","this","flags","currentFlagIndex","path","alt","shownFlags","length","correctAnswers","icon","faFlag","faCheck","faMapMarkerAlt","marker","lat","toFixed","lng","color","disabled","requestSent","onClick","hidden","prevCountryMessage","class","faArrowLeft","Component","connect","state","dispatch","getState","setTimeout","currentIndex","query","fetch","then","response","ok","json","error","Error","statusText","message","data","address","country_code","localeCompare","code","possibleNewIndexes","Array","keys","filter","includes","newIndex","Math","floor","random","catch","randomFirstIndex","GuessMap","refmarker","createRef","refmap","updatePosition","current","newPosition","leafletElement","getLatLng","changeMarkerPosition","componentDidUpdate","invalidateSize","position","map","center","markerPosition","Map","zoom","ref","TileLayer","attribution","url","Marker","draggable","onDragend","Header","Fragment","navbar","faQuestion","href","faCode","faAddressCard","initialState","FLAGS","Reducer","action","concat","store","createStore","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.38cb4bc7.chunk.js","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const changeMarkerPosition = (lat, lng) => ({\r\n    type: ActionTypes.CHANGE_MARKER_POSITION,\r\n    payload: {\r\n        lat: lat,\r\n        lng: lng,\r\n    }\r\n});\r\n\r\nexport const setRandomFirstIndex = () => (dispatch, getState) => {\r\n    //определить первый случайный индекс флага\r\n    const randomFirstIndex = Math.floor(Math.random() * getState().flags.length);\r\n\r\n    dispatch(changeCurrentFlagIndex(randomFirstIndex));\r\n    //записать, что игра в прогрессе\r\n    dispatch(changeGameStatus(true));\r\n}\r\n\r\nexport const changeGameStatus = (status) => ({\r\n    type: ActionTypes.CHANGE_GAME_STATUS,\r\n    payload: {\r\n        status: status\r\n    }\r\n});\r\n\r\nexport const fetchAddress = () => (dispatch, getState) => {\r\n    //задержка в 1000 мс, используемый API не рекомендует посылать запросы чаще чем через 1 сек.\r\n    dispatch(changeRequestStatus(true));\r\n    setTimeout(() => {\r\n        dispatch(changeRequestStatus(false))\r\n    },\r\n        1000\r\n    );\r\n    const currentIndex = getState().game.currentFlagIndex;\r\n    const query = 'https://nominatim.openstreetmap.org/reverse?format=jsonv2&'\r\n        + 'lat=' + getState().marker.lat\r\n        + '&lon=' + getState().marker.lng\r\n        + '&accept-language=ru';\r\n\r\n    //запрос reverse к Nominatim API\r\n    return fetch(query)\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw new Error(error.message);\r\n            })\r\n        .then((data) => {\r\n            //записать страну, чтобы можно было узнать правильный ответ\r\n            dispatch(changePrevCountryMessage(getState().flags[currentIndex].country));\r\n            //если коды стран совпали, то ответ верный\r\n            if (data.address.country_code\r\n                .localeCompare(getState().flags[currentIndex].code) === 0) {\r\n                dispatch(countCorrectAnswer());\r\n            }\r\n\r\n            //добавить текущий флаг в просмотренные\r\n            dispatch(addFlagToShownFlags(currentIndex));\r\n\r\n            //вычесть из всех флагов уже просмотренные, чтобы получить массив из непоказанных флагов\r\n            const possibleNewIndexes = [...Array(getState().flags.length).keys()]\r\n                .filter(index => !getState().game.shownFlags.includes(index));\r\n\r\n            //если непоказанных флагов нет, то конец игры\r\n            if (possibleNewIndexes.length === 0) {\r\n                return;\r\n            }\r\n\r\n            //выбрать случайный индекс из не показанных раньше\r\n            const newIndex = possibleNewIndexes[Math.floor(Math.random() * possibleNewIndexes.length)]\r\n\r\n            dispatch(changeCurrentFlagIndex(newIndex));\r\n        })\r\n        .catch(error => dispatch(handleError(error.message)));\r\n}\r\n\r\nexport const handleError = (errorMessage) => ({\r\n    type: ActionTypes.HANDLE_ERROR,\r\n    payload: {\r\n        errorMessage: errorMessage\r\n    }\r\n});\r\n\r\nexport const changePrevCountryMessage = (country) => ({\r\n    type: ActionTypes.CHANGE_PREV_COUNTRY_MESSAGE,\r\n    payload: {\r\n        country: country\r\n    }\r\n});\r\n\r\nexport const countCorrectAnswer = () => ({\r\n    type: ActionTypes.COUNT_CORRECT_ANSWER\r\n});\r\n\r\nexport const changeRequestStatus = (sent) => ({\r\n    type: ActionTypes.CHANGE_REQUEST_STATUS,\r\n    payload: {\r\n        status: sent\r\n    }\r\n})\r\n\r\nexport const addFlagToShownFlags = (index) => ({\r\n    type: ActionTypes.ADD_FLAG_TO_SHOWN_FLAGS,\r\n    payload: {\r\n        index: index\r\n    }\r\n});\r\n\r\nexport const changeCurrentFlagIndex = (index) => ({\r\n    type: ActionTypes.CHANGE_CURRENT_FLAG_INDEX,\r\n    payload: {\r\n        index: index\r\n    }\r\n});\r\n","export const CHANGE_MARKER_POSITION = 'CHANGE_MARKER_POSITION';\r\nexport const CHANGE_CURRENT_FLAG_INDEX = 'CHANGE_CURRENT_FLAG_INDEX';\r\nexport const ADD_FLAG_TO_SHOWN_FLAGS = 'ADD_FLAG_TO_SHOWN_FLAGS';\r\nexport const COUNT_CORRECT_ANSWER = 'COUNT_CORRECT_ANSWER';\r\nexport const HANDLE_ERROR = 'HANDLE_ERROR';\r\nexport const CHANGE_REQUEST_STATUS = 'CHANGE_REQUEST_STATUS';\r\nexport const CHANGE_PREV_COUNTRY_MESSAGE = 'CHANGE_PREV_COUNTRY_MESSAGE';\r\nexport const CHANGE_GAME_STATUS = 'CHANGE_GAME_STATUS';","import React, { Component } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faFlag, faCheck, faArrowLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport \"../styles/GuessGame.css\";\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchAddress, setRandomFirstIndex } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    flags: state.flags,\r\n    game: state.game,\r\n    requestSent: state.requestSent,\r\n    prevCountryMessage: state.prevCountryMessage,\r\n    marker: state.marker\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchAddress: () => { dispatch(fetchAddress()) },\r\n  setRandomFirstIndex: () => { dispatch(setRandomFirstIndex()) }\r\n});\r\n\r\nclass GuessGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //случайно определить первый флаг\r\n    if (!this.props.game.isInProgress) {\r\n      this.props.setRandomFirstIndex();\r\n    }\r\n  }\r\n  //обработка клика на кнопку\r\n  handleConfirmation = () => {\r\n    this.props.fetchAddress();\r\n  }\r\n\r\n  render() {\r\n    //localhost ...src={require(`../../public/${this.props.flags[this.props.game.currentFlagIndex].path}`)}\r\n    return (\r\n      <div className=\"game-card\">\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-img\">\r\n\r\n            <img src={this.props.flags[this.props.game.currentFlagIndex].path} className=\"flag-img\" alt=\"[Текущий флаг]\" />\r\n          </div>\r\n          <div className=\"col-lead hide-on-mobile\">\r\n            <p>\r\n              Флаг #{this.props.game.shownFlags.length + 1}\r\n            </p>\r\n            <p>\r\n              Правильных ответов: {this.props.game.correctAnswers}\r\n            </p>\r\n          </div>\r\n          <p className=\"col-lead-mobile hide-on-desktop\">\r\n            <FontAwesomeIcon icon={faFlag} /> #{this.props.game.shownFlags.length + 1}\r\n            &nbsp;|&nbsp;\r\n            <FontAwesomeIcon icon={faCheck} /> {this.props.game.correctAnswers}\r\n          </p>\r\n        </div>\r\n\r\n        <p className=\"hide-on-mobile\">Потяните <FontAwesomeIcon icon={faMapMarkerAlt} /> маркер на карте, чтобы указать страну</p>\r\n        <hr />\r\n        <p>\r\n          <span className=\"hide-on-mobile\">Текущие координаты</span>&nbsp;<FontAwesomeIcon icon={faMapMarkerAlt} />:&nbsp;\r\n          {this.props.marker ?\r\n            `${this.props.marker.lat.toFixed(2)}, ${this.props.marker.lng.toFixed(2)}` :\r\n            \"Маркер не найден\"}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"button\"\r\n          color=\"primary\"\r\n          disabled={this.props.requestSent || !this.props.game.isInProgress}\r\n          onClick={this.handleConfirmation}>\r\n          <span className=\"hide-on-mobile\">Подтвердить выбранные координаты</span>\r\n          <span className=\"hide-on-desktop\">\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n            &nbsp;\r\n            <FontAwesomeIcon icon={faCheck} />\r\n          </span>\r\n        </button>\r\n        <div hidden={!this.props.prevCountryMessage}>\r\n          <p class=\"prev-country-message\" >\r\n            <span className=\"hide-on-desktop\">\r\n              <FontAwesomeIcon icon={faArrowLeft} />\r\n              <FontAwesomeIcon icon={faFlag} />\r\n            </span>\r\n            <span className=\"hide-on-mobile\">Предыдущий флаг:</span>\r\n            <img src={this.props.game.shownFlags.length > 0 ?\r\n              this.props.flags[this.props.game.shownFlags[this.props.game.shownFlags.length - 1]].path\r\n              : 'temp_path'}\r\n              className=\"flag-img-mini\" alt=\"[Флаг]\" />\r\n            <br />\r\n            {this.props.prevCountryMessage}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuessGame);","import React, { createRef, Component } from 'react';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\n\r\nimport GuessGame from './GuessGame';\r\nimport '../styles/GuessMap.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { changeMarkerPosition } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    map: state.map,\r\n    marker: state.marker\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  changeMarkerPosition: (lat, lng) => dispatch(changeMarkerPosition(lat, lng))\r\n});\r\n\r\nclass GuessMap extends Component<{}, State> {\r\n\r\n  refmarker = createRef()\r\n  refmap = createRef()\r\n\r\n  updatePosition = () => {\r\n    const marker = this.refmarker.current;\r\n    if (marker != null) {\r\n      const newPosition = marker.leafletElement.getLatLng();\r\n      // послать action \"записать новую позицию\"\r\n      this.props.changeMarkerPosition(newPosition.lat, newPosition.lng);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    //фикс странного бага непрогрузки карты, видимо вызываемого конфликтом leaflet и create-react-app\r\n    if (this.refmap.current) {\r\n      this.refmap.current.leafletElement.invalidateSize();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const position = [this.props.map.center.lat, this.props.map.center.lng];\r\n    const markerPosition = [this.props.marker.lat, this.props.marker.lng];\r\n\r\n    return (\r\n      <div>\r\n        <Map center={position} zoom={this.props.map.zoom} ref={this.refmap}>\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <Marker\r\n            draggable={true}\r\n            onDragend={this.updatePosition}\r\n            position={markerPosition}\r\n            ref={this.refmarker}>\r\n          </Marker>\r\n        </Map>\r\n        <GuessGame />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GuessMap);","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFlag, faQuestion, faAddressCard, faCode, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport '../styles/Header.css';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav>\r\n          <div className=\"hide-on-desktop\">\r\n            <span className=\"white nav-item\">\r\n              {\"Потяните \"}\r\n              <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n              {\", чтобы указать страну\"}\r\n            </span>\r\n          </div>\r\n          <ul navbar>\r\n            <div className=\"hide-on-mobile\">\r\n              <li className=\"nav-item\">\r\n                <span className=\"white\">\r\n                  <FontAwesomeIcon icon={faFlag} />\r\n                  <FontAwesomeIcon icon={faQuestion} />\r\n                  {\" Укажите страну по ее флагу\"}\r\n                </span>\r\n\r\n              </li></div>\r\n            <li className=\"nav-item\">\r\n              <a href=\"https://github.com/AndreyZhartun/point-the-flag\" className=\"gray\">\r\n                <FontAwesomeIcon icon={faCode} />\r\n                <span className=\"hide-on-mobile\">{\" Github \"}</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/\" className=\"gray\">\r\n                <FontAwesomeIcon icon={faAddressCard} />\r\n                <span className=\"hide-on-mobile\">{\" Про меня\"}</span>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <div className=\"hide-on-mobile\">\r\n            <div className=\"nav-item\">\r\n              <span className=\"hide-on-mobile gray\">React, leaflet.js, Nominatim API</span>\r\n            </div></div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import { FLAGS } from '../shared/flags.json';   //загрузка кодов и путей к флагам\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const initialState = {\r\n    flags: FLAGS,\r\n    game: {\r\n        currentFlagIndex: 0,\r\n        shownFlags: [],\r\n        correctAnswers: 0,\r\n        isInProgress: false\r\n    },\r\n    map: {\r\n        center: {\r\n            lat: 40,\r\n            lng: 12,\r\n        },\r\n        zoom: 3\r\n    },\r\n    marker: {\r\n        lat: 51.505,\r\n        lng: -0.09\r\n    },\r\n    requestSent: false,\r\n    errorMessage: \"\",\r\n    prevCountryMessage: \"\"\r\n};\r\n\r\nexport const Reducer = (state, action) => {\r\n    switch (action.type) {\r\n        //записать новую позицию маркера\r\n        case ActionTypes.CHANGE_MARKER_POSITION:\r\n            /*const newMarker = {\r\n                ...(state.marker),\r\n                lat: action.payload.lat,\r\n                lng: action.payload.lng\r\n            };*/\r\n            return {\r\n                ...state,\r\n                marker: {\r\n                    ...(state.marker),\r\n                    lat: action.payload.lat,\r\n                    lng: action.payload.lng\r\n                }\r\n            };\r\n        //запомнить, что текущий флаг показан\r\n        case ActionTypes.ADD_FLAG_TO_SHOWN_FLAGS:\r\n            //var newArray = state.game.shownFlags.concat(action.payload.index);\r\n            /*const gameWithNewShownFlags = {\r\n                ...(state.game),\r\n                shownFlags: state.game.shownFlags.concat(action.payload.index)\r\n            }*/\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    shownFlags: state.game.shownFlags.concat(action.payload.index)\r\n                }\r\n            };\r\n        //изменить показываемый флаг\r\n        case ActionTypes.CHANGE_CURRENT_FLAG_INDEX:\r\n            /*const gameWithNewIndex = {\r\n                ...(state.game),\r\n                currentFlagIndex: action.payload.index\r\n            };*/\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    currentFlagIndex: action.payload.index\r\n                }\r\n            };\r\n        //засчитать правильный ответ\r\n        case ActionTypes.COUNT_CORRECT_ANSWER:\r\n            //const newCorrectAnswers = state.game.correctAnswers + 1;\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    correctAnswers: state.game.correctAnswers + 1\r\n                }\r\n            };\r\n        //изменить статус игры (bool вПрогрессе: да/нет)\r\n        case ActionTypes.CHANGE_GAME_STATUS:\r\n            return {\r\n                ...state,\r\n                game: {\r\n                    ...(state.game),\r\n                    isInProgress: action.payload.status\r\n                }\r\n            }\r\n        //показать флаг какой страны был показан до этого \r\n        case ActionTypes.CHANGE_PREV_COUNTRY_MESSAGE:\r\n            return {\r\n                ...state,\r\n                prevCountryMessage: action.payload.country\r\n            }\r\n        //изменить статус запроса\r\n        case ActionTypes.CHANGE_REQUEST_STATUS:\r\n            return {\r\n                ...state,\r\n                requestSent: action.payload.status\r\n            }\r\n        //записать новое сообщение ошибки\r\n        case ActionTypes.HANDLE_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload.errorMessage\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\n\nimport GuessMap from './components/GuessMap';\nimport Header from './components/Header';\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Header />\n      <GuessMap />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { Reducer, initialState } from './reducer';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        Reducer,\r\n        initialState,\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}